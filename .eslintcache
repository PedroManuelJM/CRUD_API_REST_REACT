[{"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\index.js":"1","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\reportWebVitals.js":"2","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\Components\\usuario.js":"3","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\utils\\index.js":"4","C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\Components\\Usuario.js":"5"},{"size":422,"mtime":1612566906860,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":13748,"mtime":1610417378399,"results":"9","hashOfConfig":"10"},{"size":71,"mtime":1610750571884,"results":"11","hashOfConfig":"7"},{"size":15395,"mtime":1612572789268,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1uja3hc",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"zylsur",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"15"},"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\index.js",[],["25","26"],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\reportWebVitals.js",[],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\Components\\usuario.js",["27","28","29"],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\utils\\index.js",[],"C:\\Users\\PCGAMING\\Desktop\\Proyectos GIT\\Proyectos-React\\crud-react\\src\\Components\\Usuario.js",["30","31","32"],"import React, { Component } from 'react';\r\nimport { ApiWebUrl } from '../utils';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport $ from 'jquery/dist/jquery';\r\nimport img1 from '../assets/img/chatbot.svg';\r\nimport img2 from '../assets/img/info.png';\r\n\r\nimport swal from 'sweetalert'; /* importando sweealert */\r\nexport default class Usuario extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            listaCategorias: [],\r\n            nombres: \"\", // nombres para poder insertar\r\n            apellidos: \"\",  // apellidos para insertar\r\n            edad: \"\",  // edad para insertar\r\n            alumnoSeleccionadoIdusuario: \"\",  // esta variables sirver para poder actualizar el dato idusuario\r\n            alumnoSeleccionadoNombre: \"\",  // esta variables sirver para poder actualizar el dato nombre\r\n            alumnoSeleccionadoApellido: \"\", // esta variables sirver para poder actualizar el dato apellido\r\n            alumnoSeleccionadoEdad: \"\", // esta variables sirver para poder actualizar el dato edad\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.obtenerAlumnos();\r\n    }\r\n    obtenerAlumnos() {\r\n        const rutaServicio = ApiWebUrl + \"listaalumnos.php\";\r\n        fetch(rutaServicio, {\r\n            'Cache-Control': 'no-cache, must-revalidate', 'Expires': 0,\r\n            method: 'GET',\r\n        })\r\n            .then(\r\n                res => res.json()\r\n            )\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    this.setState({\r\n                        listaCategorias: result\r\n                    })\r\n                }\r\n            )\r\n    }\r\n\r\n    dibujarCategorias = (datosTablaCategorias) => {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-striped table-hover overflow-auto\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr className=\"text-center\">\r\n                            <th>Código</th>\r\n                            <th>Nombre</th>\r\n                            <th>Apellidos</th>\r\n                            <th>Edad</th>\r\n                            <th>Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {datosTablaCategorias.map(itemCategoria =>\r\n                            <tr key={itemCategoria.idusuario} className=\"text-center\">\r\n                                <td>{itemCategoria.idusuario}</td>\r\n                                <td>{itemCategoria.nombres}</td>\r\n                                <td>{itemCategoria.apellidos}</td>\r\n                                <td>{itemCategoria.edad}</td>\r\n                                <td>\r\n                                    <FontAwesomeIcon className=\"fa-icon min-padded\" icon={faPen} onClick={() => this.mostrarActualizar(itemCategoria)} />\r\n                                    <FontAwesomeIcon className=\"fa-icon min-padded \" icon={faTimes} onClick={() => this.categoriaEliminar(itemCategoria)} />\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    categoriaEliminar(itemCategoria) {\r\n        var respuesta = window.confirm(\"¿Está seguro que desea eliminar al alumno(a) \" + itemCategoria.nombres + \" ?\");\r\n        if (respuesta === true) {\r\n            const rutaServicio = ApiWebUrl + \"eliminaralumnos.php\";\r\n            var formData = new FormData();\r\n            formData.append(\"idusuario\", itemCategoria.idusuario)\r\n            fetch(rutaServicio, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n\r\n                .then(\r\n                    () => {\r\n                        this.obtenerAlumnos();\r\n                        alert(\"Se eliminó al alumno(a) \" + itemCategoria.nombres);\r\n                    }\r\n                )\r\n        }\r\n    }\r\n    // pasando a esta funcion los datos de la tabla principal para el modal actualizar \r\n    mostrarActualizar(itemAlumno) {\r\n        this.setState({\r\n            alumnoSeleccionadoIdusuario: itemAlumno.idusuario,\r\n            alumnoSeleccionadoNombre: itemAlumno.nombres,\r\n            alumnoSeleccionadoApellido: itemAlumno.apellidos,\r\n            alumnoSeleccionadoEdad: itemAlumno.edad,\r\n        })\r\n        $(\"#modalActualizar\").modal();\r\n    }\r\n\r\n    dibujarFormularioAgregar() {\r\n        return (\r\n            <div id=\"formulario-agregar\">\r\n                <br />\r\n                <div className=\"card\">\r\n                    <div className=\"\">\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.ocultarFormularioAgregar} style={{ float: 'right' }}>   <FontAwesomeIcon className=\"fa-icon\" icon={faTimes} onClick={() => this.ocultarFormularioAgregar} /></button>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.categoriasInsertar}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" id=\"nombre\" className=\"form-control \" placeholder=\"Nombres\"\r\n                                    onChange={(e) => this.setState({ nombres: e.target.value })}\r\n                                    required minLength=\"3\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" id=\"apellido\" className=\"form-control \" placeholder=\"Apellidos\"\r\n                                    onChange={(e) => this.setState({ apellidos: e.target.value })}\r\n                                    required minLength=\"1\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" id=\"edad\" className=\"form-control \" placeholder=\"Edad\"\r\n                                    onChange={(e) => this.setState({ edad: e.target.value })}\r\n                                    required minLength=\"2\" maxLength=\"2\" />\r\n                            </div>\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\">Guardar</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    categoriasInsertar = (e) => {\r\n        e.preventDefault();\r\n        const rutaServicio = ApiWebUrl + \"registraralumnos.php\";// registrarcat.php\r\n        var formData = new FormData();\r\n        formData.append(\"nombres\", this.state.nombres) // nombre_categoria es el nombre del atributo de la variable tabla categoria\r\n        formData.append(\"apellidos\", this.state.apellidos)\r\n        formData.append(\"edad\", this.state.edad)\r\n        //Asi se agregan todos los parámetros que el servicio requiera (nombre del parámetro , valor que se envía)  \r\n        fetch(rutaServicio, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(\r\n                res => res.text()\r\n            )\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    this.obtenerAlumnos();\r\n                    this.ocultarFormularioAgregar();\r\n                    /* alert(\"Se agregó una nueva categoría con id \" + result);*/\r\n                    swal(\r\n                        {\r\n                            text: \" Se inserto la categoria \" + this.state.nombres + \" sastifactoriamente.\",\r\n                            icon: \"success\",\r\n                            button: \"Ok\",\r\n                            timer: \"2000\",\r\n                        });\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    mostrarFormularioAgregar() {\r\n        $(\"#formulario-agregar\").slideDown(\"slow\");\r\n    }\r\n    ocultarFormularioAgregar() {\r\n        $(\"#formulario-agregar\").slideUp(\"slow\");\r\n        // limpiando los inputs cuando termina de registrar\r\n        document.getElementById('nombre').value = '';\r\n        document.getElementById('apellido').value = '';\r\n        document.getElementById('edad').value = '';\r\n    }\r\n\r\n    alumnosActualizar = (e) => {\r\n        const rutaServicio = ApiWebUrl + \"actualizaralumnos.php\";\r\n        var formData = new FormData();\r\n        formData.append(\"idusuario\", this.state.alumnoSeleccionadoIdusuario)\r\n        formData.append(\"nombres\", this.state.alumnoSeleccionadoNombre)\r\n        formData.append(\"apellidos\", this.state.alumnoSeleccionadoApellido)\r\n        formData.append(\"edad\", this.state.alumnoSeleccionadoEdad)\r\n        //Asi se agregan todos los parámetros que el servicio requiera (nombre del parámetro , valor que se envía)  \r\n        fetch(rutaServicio, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(\r\n                () => {\r\n                    this.obtenerAlumnos();\r\n                    $(\"#modalActualizar\").modal(\"toggle\");\r\n                    swal({\r\n                        text: \"Se actualizo los datos del alumno (a) \" + this.state.alumnoSeleccionadoNombre + \" , \" + this.state.alumnoSeleccionadoApellido,\r\n                        icon: \"success\",\r\n                        button: \"Ok\",\r\n                        timer: \"2000\",\r\n                    })\r\n                }\r\n            )\r\n    }\r\n    // Modal actualizar alumno \r\n    dibujarModal() {\r\n        return (\r\n            <div className=\"modal fade\" id=\"modalActualizar\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Actualizar Alumno</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"hidden\" className=\"form-control\" value={this.state.alumnoSeleccionadoIdusuario} disabled />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\"> Nombres </span>\r\n                                    <input type=\"text\" className=\"form-control\" value={this.state.alumnoSeleccionadoNombre}\r\n                                        onChange={(e) => this.setState({ alumnoSeleccionadoNombre: e.target.value })}\r\n                                        aria-describedby=\"basic-addon1\" />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\"> Apellidos </span>\r\n                                    <input type=\"text\" className=\"form-control\" value={this.state.alumnoSeleccionadoApellido}\r\n                                        onChange={(e) => this.setState({ alumnoSeleccionadoApellido: e.target.value })}\r\n                                        aria-describedby=\"basic-addon1\" />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\"> Edad </span>\r\n                                    <input type=\"text\" className=\"form-control\" value={this.state.alumnoSeleccionadoEdad}\r\n                                        onChange={(e) => this.setState({ alumnoSeleccionadoEdad: e.target.value })}\r\n                                    />\r\n                                    <span className=\"input-group-text\"> años .</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.alumnosActualizar()}>Actualizar</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let contenidoCategorias = this.dibujarCategorias(this.state.listaCategorias);\r\n        let contenidoFormularioAgregar = this.dibujarFormularioAgregar();\r\n        let contenidoModal = this.dibujarModal();\r\n        return (\r\n            <>\r\n                <nav id=\"nav-color\" className=\"navbar navbar-light bg-light\">\r\n                    <div className=\"container-fluid\" style={{ padding: \"8px\" }}>\r\n                        <a className=\"navbar-brand\" href=\"#\">\r\n                            <img src={img1} alt=\"\" width=\"30\" height=\"24\" className=\"d-inline-block align-top\" />\r\n                CRUD - API REST - REACT\r\n                </a>\r\n                    </div>\r\n                </nav>\r\n                <section id=\"tabla-categorias\" className=\"\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"wrapper float-left\">\r\n                                    <div className=\"icon info\">\r\n                                        <div className=\"tooltip\">Desarrollado por Pedro M.A Jurado Moreno</div>\r\n                                        <a href=\"#\"\r\n                                            style={{ width: \"32px\" }}>\r\n                                            <img src={img2} />\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.mostrarFormularioAgregar}>\r\n                                        Nuevo Alumno</button>\r\n                                    {contenidoFormularioAgregar}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                {contenidoCategorias}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {contenidoModal}\r\n                </section>\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":10,"nodeType":"39","messageId":"40","endLine":3,"endColumn":25},{"ruleId":"37","severity":1,"message":"41","line":4,"column":10,"nodeType":"39","messageId":"40","endLine":4,"endColumn":15},{"ruleId":"37","severity":1,"message":"42","line":4,"column":17,"nodeType":"39","messageId":"40","endLine":4,"endColumn":24},{"ruleId":"43","severity":1,"message":"44","line":275,"column":25,"nodeType":"45","endLine":275,"endColumn":62},{"ruleId":"43","severity":1,"message":"44","line":288,"column":41,"nodeType":"45","endLine":289,"endColumn":71},{"ruleId":"46","severity":1,"message":"47","line":290,"column":45,"nodeType":"45","endLine":290,"endColumn":63},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faPen' is defined but never used.","'faTimes' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]